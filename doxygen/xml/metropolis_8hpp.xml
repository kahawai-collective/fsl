<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="metropolis_8hpp" kind="file">
    <compoundname>metropolis.hpp</compoundname>
    <includes local="no">fstream</includes>
    <includes local="no">stencila/arrays.hpp</includes>
    <includes local="no">stencila/tables.hpp</includes>
    <includes refid="uniform_8hpp" local="no">fsl/math/probability/uniform.hpp</includes>
    <includes refid="normal_8hpp" local="no">fsl/math/probability/normal.hpp</includes>
    <incdepgraph>
      <node id="444">
        <label>boost/random/variate_generator.hpp</label>
      </node>
      <node id="440">
        <label>boost/random/uniform_real.hpp</label>
      </node>
      <node id="437">
        <label>stencila/tables.hpp</label>
      </node>
      <node id="449">
        <label>boost/format.hpp</label>
      </node>
      <node id="448">
        <label>boost/random/normal_distribution.hpp</label>
      </node>
      <node id="447">
        <label>boost/math/distributions/normal.hpp</label>
      </node>
      <node id="439">
        <label>boost/math/distributions/uniform.hpp</label>
      </node>
      <node id="435">
        <label>fstream</label>
      </node>
      <node id="443">
        <label>boost/random/mersenne_twister.hpp</label>
      </node>
      <node id="446">
        <label>fsl/math/probability/normal.hpp</label>
        <link refid="normal_8hpp"/>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
      </node>
      <node id="436">
        <label>stencila/arrays.hpp</label>
      </node>
      <node id="442">
        <label>ctime</label>
      </node>
      <node id="441">
        <label>fsl/math/probability/distribution.hpp</label>
        <link refid="distribution_8hpp"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
      </node>
      <node id="434">
        <label>metropolis.hpp</label>
        <link refid="metropolis.hpp"/>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
      </node>
      <node id="445">
        <label>boost/random/uniform_01.hpp</label>
      </node>
      <node id="438">
        <label>fsl/math/probability/uniform.hpp</label>
        <link refid="uniform_8hpp"/>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis" prot="public">Fsl::Estimation::Mcmc::Metropolis</innerclass>
    <innernamespace refid="namespaceFsl">Fsl</innernamespace>
    <innernamespace refid="namespaceFsl_1_1Estimation">Fsl::Estimation</innernamespace>
    <innernamespace refid="namespaceFsl_1_1Estimation_1_1Mcmc">Fsl::Estimation::Mcmc</innernamespace>
    <innernamespace refid="namespaceStencila_1_1Arrays">Stencila::Arrays</innernamespace>
    <innernamespace refid="namespaceStencila_1_1Tables">Stencila::Tables</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stencila/arrays.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stencila/tables.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="uniform_8hpp" kindref="compound">fsl/math/probability/uniform.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="normal_8hpp" kindref="compound">fsl/math/probability/normal.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Fsl<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Estimation<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Mcmc<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Stencila::Arrays;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Stencila::Tables;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceFsl_1_1Math_1_1Statistics_1_1Univariate_1a77f57fe243eaf7a18a3fe539068e0d6d" kindref="member">Stencila::Real</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Stencila::Integer;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Derived,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceFsl_1_1Estimation_1a4a0f8269d9eb74ce4febdd15cc8d5203" kindref="member">Parameters</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="36" refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis" kindref="compound">Metropolis</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39" refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1ad6d406ed26a0af76c7d64e7316b7135c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;&gt;<sp/>values<sp/>=<sp/><ref refid="namespaceFsl_1_1Estimation_1a4a0f8269d9eb74ce4febdd15cc8d5203" kindref="member">Parameters</ref>;</highlight></codeline>
<codeline lineno="40" refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1a480c2bac66c59226d5cf6d33b0c92d9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1a480c2bac66c59226d5cf6d33b0c92d9d" kindref="member">ll</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1a370bf0aee05a8c2b06235273f3f8c4fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;&gt;<sp/>variances<sp/>=<sp/><ref refid="namespaceFsl_1_1Estimation_1a4a0f8269d9eb74ce4febdd15cc8d5203" kindref="member">Parameters</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1aff39a772965439b4d06fae04682de47a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1aff39a772965439b4d06fae04682de47a" kindref="member">iterations</ref>;</highlight></codeline>
<codeline lineno="47" refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1acc6ef08e5cb587a6ace8190d9189d5c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1acc6ef08e5cb587a6ace8190d9189d5c5" kindref="member">accepted</ref>;</highlight></codeline>
<codeline lineno="48" refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1a2e5e8a84a65da459c3efe5bff78edcfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1a2e5e8a84a65da459c3efe5bff78edcfa" kindref="member">acceptance</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1adb0d61403f23b240a80532e548ec8933" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Table<sp/><ref refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1adb0d61403f23b240a80532e548ec8933" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1abb13f1170775bce82f5c01643370ed95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1abb13f1170775bce82f5c01643370ed95" kindref="member">Metropolis</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples(</highlight><highlight class="stringliteral">&quot;samples&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;iteration&quot;</highlight><highlight class="normal">,<ref refid="namespaceFsl_1_1Math_1_1Statistics_1_1Univariate_1a77f57fe243eaf7a18a3fe539068e0d6d" kindref="member">Real</ref>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;acceptance&quot;</highlight><highlight class="normal">,<ref refid="namespaceFsl_1_1Math_1_1Statistics_1_1Univariate_1a77f57fe243eaf7a18a3fe539068e0d6d" kindref="member">Real</ref>,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;log_like&quot;</highlight><highlight class="normal">,<ref refid="namespaceFsl_1_1Math_1_1Statistics_1_1Univariate_1a77f57fe243eaf7a18a3fe539068e0d6d" kindref="member">Real</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>par=0;par&lt;<ref refid="namespaceFsl_1_1Estimation_1a4a0f8269d9eb74ce4febdd15cc8d5203" kindref="member">Parameters</ref>;par++)<sp/>samples.add(</highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal">+boost::lexical_cast&lt;std::string&gt;(par),<ref refid="namespaceFsl_1_1Math_1_1Statistics_1_1Univariate_1a77f57fe243eaf7a18a3fe539068e0d6d" kindref="member">Real</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1a627c4081fb5db61e12e81bbf23c31644" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1a627c4081fb5db61e12e81bbf23c31644" kindref="member">reset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accepted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceptance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll<sp/>=<sp/>-INFINITY;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1a0b03fd5a9008e976034757c75e89f381" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1a0b03fd5a9008e976034757c75e89f381" kindref="member">step</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classFsl_1_1Math_1_1Probability_1_1Normal" kindref="compound">Math::Probability::Normal</ref><sp/><ref refid="classFsl_1_1Math_1_1Probability_1_1Normal" kindref="compound">Normal</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classFsl_1_1Math_1_1Probability_1_1Uniform" kindref="compound">Math::Probability::Uniform</ref><sp/>Uniform;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array&lt;&gt;<sp/>proposal(<ref refid="classFsl_1_1Estimation_1_1Variables" kindref="compound">Parameters</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>par=0;par&lt;<ref refid="namespaceFsl_1_1Estimation_1a4a0f8269d9eb74ce4febdd15cc8d5203" kindref="member">Parameters</ref>;par++){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>values(par);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance<sp/>=<sp/>variances(par);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proposal(par)<sp/>=<sp/>Normal(value,std::sqrt(variance)).random();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ll_proposal<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Derived*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;log_like(proposal);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio<sp/>=<sp/>ll_proposal-ll;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations++;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ratio&gt;std::log(Uniform().random())){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>=<sp/>proposal;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll<sp/>=<sp/>ll_proposal;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations++;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceptance<sp/>=<sp/>accepted/float(iterations);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Insert<sp/>the<sp/>current<sp/>values<sp/>into<sp/>the<sp/>samples<sp/>datatable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>row(3+Parameters);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row[0]<sp/>=<sp/>iterations;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row[1]<sp/>=<sp/>acceptance;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row[2]<sp/>=<sp/>ll;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>par=0;par&lt;<ref refid="namespaceFsl_1_1Estimation_1a4a0f8269d9eb74ce4febdd15cc8d5203" kindref="member">Parameters</ref>;par++)<sp/>row[3+par]<sp/>=<sp/>values(par);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples.append(row);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1aadc6266e4561181615f0b0e1161afcb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFsl_1_1Estimation_1_1Mcmc_1_1Metropolis_1aadc6266e4561181615f0b0e1161afcb4" kindref="member">run</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>Mcmc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>Estimation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>Fsl</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/estimation/estimators/metropolis.hpp"/>
  </compounddef>
</doxygen>
