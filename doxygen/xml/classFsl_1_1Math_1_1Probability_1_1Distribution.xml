<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classFsl_1_1Math_1_1Probability_1_1Distribution" kind="class" prot="public">
    <compoundname>Fsl::Math::Probability::Distribution</compoundname>
    <includes refid="distribution_8hpp" local="no">distribution.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Derived</declname>
        <defname>Derived</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a1537a7d05c692fcbf342578fa31ae235" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fsl::Math::Probability::Distribution&lt; Derived &gt;::reset</definition>
        <argsstring>(void)</argsstring>
        <name>reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="46" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="46" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a00caac6eac86cc44ccdc9720faaf5f78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::minimum</definition>
        <argsstring>(void) const </argsstring>
        <name>minimum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="49" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1ab2ea5f1f9d130b60bfe4f4bbb0de7e63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::maximum</definition>
        <argsstring>(void) const </argsstring>
        <name>maximum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="53" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a9f90b3f4d35dc4ea5f4b9501152fbadb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::mean</definition>
        <argsstring>(void) const </argsstring>
        <name>mean</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="57" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a34a14e15530a93c2df87df5d77140ac7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::median</definition>
        <argsstring>(void) const </argsstring>
        <name>median</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="61" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1ac18258b38bbf9c27da0e48cbf770c1a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::mode</definition>
        <argsstring>(void) const </argsstring>
        <name>mode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="65" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a5a5a281e95a45fb70638b04c941fba1d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::sd</definition>
        <argsstring>(void) const </argsstring>
        <name>sd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="69" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a358614db8b80a2eae26f05295b12d341" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::variance</definition>
        <argsstring>(void) const </argsstring>
        <name>variance</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="73" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1adb2fb0a7256051b5bf99c38d59d36fda" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::skewness</definition>
        <argsstring>(void) const </argsstring>
        <name>skewness</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="77" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a27702e37a5dac645aecd3f7fc6813470" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::kurtosis</definition>
        <argsstring>(void) const </argsstring>
        <name>kurtosis</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="81" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1ac0d9d73ea52b4fb214271c1391c0213a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::kurtosis_excess</definition>
        <argsstring>(void) const </argsstring>
        <name>kurtosis_excess</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="85" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a0a1307c8d9428c903488eb5f3a02dcd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Fsl::Math::Probability::Distribution&lt; Derived &gt;::valid</definition>
        <argsstring>(void) const </argsstring>
        <name>valid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>implement Duple&lt;&gt; to provide for range and support </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="100" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1ababdc660ac4484fabda39d2ab110a48c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Derived &amp;</type>
        <definition>const Derived&amp; Fsl::Math::Probability::Distribution&lt; Derived &gt;::derived</definition>
        <argsstring>(void) const </argsstring>
        <name>derived</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="104" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a7cfb85769d5c6e6b31c8cab5c45ed767" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::likelihood</definition>
        <argsstring>(const double &amp;x) const </argsstring>
        <name>likelihood</name>
        <param>
          <type>const double &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="108" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1aef52f307725cc37dab678052b46bb600" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::pdf</definition>
        <argsstring>(const double &amp;x) const </argsstring>
        <name>pdf</name>
        <param>
          <type>const double &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="112" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a9e94ccbe41aed99451a765036ab45cb0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::cdf</definition>
        <argsstring>(const double &amp;x) const </argsstring>
        <name>cdf</name>
        <param>
          <type>const double &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="117" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a6b7c1340236cd4ce8f5804fb53eead3f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::quantile</definition>
        <argsstring>(const double &amp;p) const </argsstring>
        <name>quantile</name>
        <param>
          <type>const double &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="122" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a727e773a1f28ba9fe5c785f04cd4f44a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::integral</definition>
        <argsstring>(const double &amp;from, const double &amp;to) const </argsstring>
        <name>integral</name>
        <param>
          <type>const double &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="127" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1aaa904b9e32f5e0c0aa7a08a5e43b7158" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Parameters</declname>
            <defname>Parameters</defname>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::integrate</definition>
        <argsstring>(const double &amp;from, const double &amp;to, Function function, Parameters...parameters) const </argsstring>
        <name>integrate</name>
        <param>
          <type>const double &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>Function</type>
          <declname>function</declname>
        </param>
        <param>
          <type>Parameters...</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Calculate the integral of distibution times function (called with parameters). The first argument of function is the x value of distibutuion. Simpson&apos;s composite rule</para>        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="135" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="135" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1aae7b19096d365089e8b9b12a83853874" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Parameters</declname>
            <defname>Parameters</defname>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::integrate</definition>
        <argsstring>(Function function, Parameters...parameters) const </argsstring>
        <name>integrate</name>
        <param>
          <type>Function</type>
          <declname>function</declname>
        </param>
        <param>
          <type>Parameters...</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="159" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classFsl_1_1Math_1_1Probability_1_1Distribution_1a40f5f13ba08b4e32124359ac68e984c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fsl::Math::Probability::Distribution&lt; Derived &gt;::random</definition>
        <argsstring>(void) const </argsstring>
        <name>random</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>A generalised means of generating a random number for a distribution. A specific distribution might override this for efficiency</para>        </inbodydescription>
        <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="163" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="163" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A base implementation class for all probability distributions</para><para>All probability distributions have a member called data_ which is a boost::math distribution. (The alternative of deriving from both boost::math distributions caused a mysterious memory bug in testing). Random variates are produced using boost::random distributions within the <ref refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a40f5f13ba08b4e32124359ac68e984c2" kindref="member">random()</ref> method. Specific classes might overide the <ref refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a40f5f13ba08b4e32124359ac68e984c2" kindref="member">random()</ref> method to provide greate efficiency (?) by using the boost::random distributions directly, rather than using <ref refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a6b7c1340236cd4ce8f5804fb53eead3f" kindref="member">quantile()</ref>.</para><para>Boost::math defines a number of non-member properties that are common to all distributions: &apos;cdf&apos;,&apos;complement&apos;,&apos;chf&apos;,&apos;hazard&apos;,&apos;kurtosis&apos;,&apos;kurtosis_excess&apos;,&apos;mean&apos;,&apos;median&apos;,&apos;mode&apos;,&apos;pdf&apos;,&apos;range&apos;,&apos;quantile&apos;,&apos;skewness&apos;,&apos;standard_deviation&apos;,&apos;support&apos;,&apos;variance&apos; these are wrapped into methods. </para>    </detaileddescription>
    <location file="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" line="43" column="1" bodyfile="/home/nbentley/Trophia/P12013_Trident/Code/fsl/fsl/math/probability/distribution.hpp" bodystart="43" bodyend="171"/>
    <listofallmembers>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a9e94ccbe41aed99451a765036ab45cb0" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>cdf</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1ababdc660ac4484fabda39d2ab110a48c" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>derived</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a727e773a1f28ba9fe5c785f04cd4f44a" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>integral</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1aaa904b9e32f5e0c0aa7a08a5e43b7158" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>integrate</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1aae7b19096d365089e8b9b12a83853874" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>integrate</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a27702e37a5dac645aecd3f7fc6813470" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>kurtosis</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1ac0d9d73ea52b4fb214271c1391c0213a" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>kurtosis_excess</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a7cfb85769d5c6e6b31c8cab5c45ed767" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>likelihood</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1ab2ea5f1f9d130b60bfe4f4bbb0de7e63" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>maximum</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a9f90b3f4d35dc4ea5f4b9501152fbadb" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>mean</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a34a14e15530a93c2df87df5d77140ac7" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>median</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a00caac6eac86cc44ccdc9720faaf5f78" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>minimum</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1ac18258b38bbf9c27da0e48cbf770c1a3" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>mode</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1aef52f307725cc37dab678052b46bb600" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>pdf</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a6b7c1340236cd4ce8f5804fb53eead3f" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>quantile</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a40f5f13ba08b4e32124359ac68e984c2" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>random</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a1537a7d05c692fcbf342578fa31ae235" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>reset</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a5a5a281e95a45fb70638b04c941fba1d" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>sd</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1adb2fb0a7256051b5bf99c38d59d36fda" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>skewness</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a0a1307c8d9428c903488eb5f3a02dcd8" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>valid</name></member>
      <member refid="classFsl_1_1Math_1_1Probability_1_1Distribution_1a358614db8b80a2eae26f05295b12d341" prot="public" virt="non-virtual"><scope>Fsl::Math::Probability::Distribution</scope><name>variance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
